/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.event.KeyEvent;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import model.ClienteVO;
import model.LivroVO;
import model.LoginVO;
import model.ReservaVO;
import util.SessaoUsuario;
import view.GUICliente;
import view.GUIDevolucao;
import view.GUIEditora;
import view.GUIEmprestimo;
import view.GUIFuncionario;
import view.GUIGenero;
import view.GUILivro;
import view.GUIReserva;

/**
 *
 * @author WILLIANDORNELESRODRI
 */
public class GUIMenuPrincipal extends javax.swing.JFrame implements InternalFrameListener{

    private boolean flagGUIFuncionario = false;
    private boolean flagGUICliente = false;
    
    private boolean flagGUILivro = false;
    private boolean flagGUIAutor = false;
    private boolean flagGUIGenero = false;
    private boolean flagGUIEditora = false;
    
    private boolean flagGUIEmprestimo = false;
    private boolean flagGUIReserva = false;
    private boolean flagGUIDevolucao = false;
    
    private boolean flagGUICadManuLogin = false;
    private boolean flagMeusDados = false;  
    
    /**
     * Creates new form MenuPrincipal
     */
    public GUIMenuPrincipal() {
        initComponents();

        setExtendedState(MAXIMIZED_BOTH);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdpAreaDeTrabalho = new javax.swing.JDesktopPane();
        jmbMenu = new javax.swing.JMenuBar();
        jmCadastro = new javax.swing.JMenu();
        jniCliente = new javax.swing.JMenuItem();
        jniFuncionario = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jniLivro = new javax.swing.JMenuItem();
        jniAutor = new javax.swing.JMenuItem();
        jniGenero = new javax.swing.JMenuItem();
        jniEditora = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jniLogin = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jniEmprestimo = new javax.swing.JMenuItem();
        jniReserva = new javax.swing.JMenuItem();
        jniDevolucao = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NOME BIBLIOTECA");

        javax.swing.GroupLayout jdpAreaDeTrabalhoLayout = new javax.swing.GroupLayout(jdpAreaDeTrabalho);
        jdpAreaDeTrabalho.setLayout(jdpAreaDeTrabalhoLayout);
        jdpAreaDeTrabalhoLayout.setHorizontalGroup(
            jdpAreaDeTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        jdpAreaDeTrabalhoLayout.setVerticalGroup(
            jdpAreaDeTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
        );

        jmCadastro.setText("Cadastro e Manutenção");

        jniCliente.setText("Cliente");
        jniCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniClienteActionPerformed(evt);
            }
        });
        jniCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniClienteKeyPressed(evt);
            }
        });
        jmCadastro.add(jniCliente);

        jniFuncionario.setText("Funcionário");
        jniFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniFuncionarioActionPerformed(evt);
            }
        });
        jniFuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniFuncionarioKeyPressed(evt);
            }
        });
        jmCadastro.add(jniFuncionario);
        jmCadastro.add(jSeparator1);

        jniLivro.setText("Livro");
        jniLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniLivroActionPerformed(evt);
            }
        });
        jniLivro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniLivroKeyPressed(evt);
            }
        });
        jmCadastro.add(jniLivro);

        jniAutor.setText("Autor");
        jniAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniAutorActionPerformed(evt);
            }
        });
        jniAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniAutorKeyPressed(evt);
            }
        });
        jmCadastro.add(jniAutor);

        jniGenero.setText("Gênero");
        jniGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniGeneroActionPerformed(evt);
            }
        });
        jniGenero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniGeneroKeyPressed(evt);
            }
        });
        jmCadastro.add(jniGenero);

        jniEditora.setText("Editora");
        jniEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniEditoraActionPerformed(evt);
            }
        });
        jniEditora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniEditoraKeyPressed(evt);
            }
        });
        jmCadastro.add(jniEditora);
        jmCadastro.add(jSeparator2);

        jniLogin.setText("Login");
        jniLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniLoginActionPerformed(evt);
            }
        });
        jniLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniLoginKeyPressed(evt);
            }
        });
        jmCadastro.add(jniLogin);

        jmbMenu.add(jmCadastro);

        jMenu1.setText("Gerenciamento");

        jniEmprestimo.setText("Empréstimo");
        jniEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniEmprestimoActionPerformed(evt);
            }
        });
        jniEmprestimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniEmprestimoKeyPressed(evt);
            }
        });
        jMenu1.add(jniEmprestimo);

        jniReserva.setText("Reserva");
        jniReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniReservaActionPerformed(evt);
            }
        });
        jniReserva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniReservaKeyPressed(evt);
            }
        });
        jMenu1.add(jniReserva);

        jniDevolucao.setText("Devolução");
        jniDevolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jniDevolucaoActionPerformed(evt);
            }
        });
        jniDevolucao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jniDevolucaoKeyPressed(evt);
            }
        });
        jMenu1.add(jniDevolucao);

        jmbMenu.add(jMenu1);

        jMenu2.setText("Sair");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jmbMenu.add(jMenu2);

        setJMenuBar(jmbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jdpAreaDeTrabalho)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jdpAreaDeTrabalho)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirGUIClientes(){
        if(!flagGUICliente){
            GUICliente gcc = new GUICliente();
            jdpAreaDeTrabalho.add(gcc);
            gcc.setVisible(true);
            flagGUICliente = true;
            gcc.addInternalFrameListener(this);
        }
    } 
    
    private void abrirGUIFuncionario(){
        if(!flagGUIFuncionario){
            GUIFuncionario gcf = new GUIFuncionario(this);
            jdpAreaDeTrabalho.add(gcf);
            gcf.setVisible(true);
            flagGUIFuncionario = true;
            gcf.addInternalFrameListener(this);
        }
    }
    
    private void abrirGUILivro(){
        if(!flagGUILivro){
            GUILivro gcl = new GUILivro(this);
            jdpAreaDeTrabalho.add(gcl);
            gcl.setVisible(true);
            flagGUILivro = true;
            gcl.addInternalFrameListener(this);
        }
    }
    
    public void abrirGUIAutor(){
        if(!flagGUIAutor){
            GUIAutor gca = new GUIAutor();
            jdpAreaDeTrabalho.add(gca);
            gca.setVisible(true);
            flagGUIAutor = true;
            gca.addInternalFrameListener(this);
        }
    }
    
    public void abrirGUIGenero(){
        if(!flagGUIGenero){
            GUIGenero gcg = new GUIGenero();
            jdpAreaDeTrabalho.add(gcg);
            gcg.setVisible(true);
            flagGUIGenero = true;
            gcg.addInternalFrameListener(this);
        }
    }
    
    public void abrirGUIEditora(){
        if(!flagGUIEditora){
            GUIEditora gce = new GUIEditora();
            jdpAreaDeTrabalho.add(gce);
            gce.setVisible(true);
            flagGUIEditora = true;
            gce.addInternalFrameListener(this);
        }       
    }
    
    public void abrirGUIEmprestimo(){
        if(!flagGUIEmprestimo){
            GUIEmprestimo gce = new GUIEmprestimo();
            jdpAreaDeTrabalho.add(gce);
            gce.setVisible(true);
            flagGUIEditora = true;
            gce.addInternalFrameListener(this);
        }       
    }
    
    private void abrirGUIReserva(){
        if(!flagGUIReserva){
            GUIReserva gcr = new GUIReserva(this);
            jdpAreaDeTrabalho.add(gcr);
            gcr.setVisible(true);
            flagGUIEditora = true;
            gcr.addInternalFrameListener(this);
        }       
    }
    
    private void abrirGUIDevolucao(){
        if(!flagGUIDevolucao){
            GUIDevolucao gcd = new GUIDevolucao();
            jdpAreaDeTrabalho.add(gcd);
            gcd.setVisible(true);
            flagGUIDevolucao = true;
            gcd.addInternalFrameListener(this);
        }       
    }
    
    public void abrirGUICadManuLogin(){
        if(!flagGUICadManuLogin){
            GUICadManuLogin gcl = new GUICadManuLogin(this);
            jdpAreaDeTrabalho.add(gcl);
            gcl.setVisible(true);
            flagGUICadManuLogin = true;
            gcl.addInternalFrameListener(this);
        }
    }
    
    private void sairDoSistema() {
        try {
            // Limpa a sessão do usuário
            SessaoUsuario.limparSessao();

            // Fecha todas as janelas internas (JInternalFrame)
            if (jdpAreaDeTrabalho != null) {
                JInternalFrame[] frames = jdpAreaDeTrabalho.getAllFrames();
                for (JInternalFrame frame : frames) {
                    if (frame != null && !frame.isClosed()) {
                        frame.dispose();
                    }
                }
            }

            // Fecha a janela principal
            this.setVisible(false);
            this.dispose();

            // Abre a tela de login
            SwingUtilities.invokeLater(() -> {
                try {
                    GUILogin login = new GUILogin();
                    login.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    login.setVisible(true);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao abrir tela de login: " + e.getMessage());
                }
            });

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao sair do sistema: " + e.getMessage(), 
                "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jniClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniClienteKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIClientes();
        }
    }//GEN-LAST:event_jniClienteKeyPressed

    private void jniClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniClienteActionPerformed
        abrirGUIClientes();
    }//GEN-LAST:event_jniClienteActionPerformed

    private void jniFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniFuncionarioActionPerformed
        abrirGUIFuncionario();
    }//GEN-LAST:event_jniFuncionarioActionPerformed

    private void jniFuncionarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniFuncionarioKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIFuncionario();
        }
    }//GEN-LAST:event_jniFuncionarioKeyPressed

    private void jniLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniLivroActionPerformed
        abrirGUILivro();
    }//GEN-LAST:event_jniLivroActionPerformed

    private void jniLivroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniLivroKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUILivro();
        }
    }//GEN-LAST:event_jniLivroKeyPressed

    private void jniAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniAutorActionPerformed
        abrirGUIAutor();
    }//GEN-LAST:event_jniAutorActionPerformed

    private void jniAutorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniAutorKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIAutor();
        }
    }//GEN-LAST:event_jniAutorKeyPressed

    private void jniGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniGeneroActionPerformed
        abrirGUIGenero();
    }//GEN-LAST:event_jniGeneroActionPerformed

    private void jniGeneroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniGeneroKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIGenero();
        }
    }//GEN-LAST:event_jniGeneroKeyPressed

    private void jniEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniEmprestimoActionPerformed
        abrirGUIEmprestimo();
    }//GEN-LAST:event_jniEmprestimoActionPerformed

    private void jniEmprestimoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniEmprestimoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIEmprestimo();
        }
    }//GEN-LAST:event_jniEmprestimoKeyPressed

    private void jniReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniReservaActionPerformed
        abrirGUIReserva();
    }//GEN-LAST:event_jniReservaActionPerformed

    private void jniReservaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniReservaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIEmprestimo();
        }
    }//GEN-LAST:event_jniReservaKeyPressed

    private void jniDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniDevolucaoActionPerformed
        abrirGUIDevolucao();
    }//GEN-LAST:event_jniDevolucaoActionPerformed

    private void jniDevolucaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniDevolucaoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIDevolucao();
        }
    }//GEN-LAST:event_jniDevolucaoKeyPressed

    private void jniEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniEditoraActionPerformed
        abrirGUIEditora();
    }//GEN-LAST:event_jniEditoraActionPerformed

    private void jniEditoraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniEditoraKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUIEditora();
        }
    }//GEN-LAST:event_jniEditoraKeyPressed

    private void jniLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jniLoginActionPerformed
        abrirGUICadManuLogin();
    }//GEN-LAST:event_jniLoginActionPerformed

    private void jniLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jniLoginKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            abrirGUICadManuLogin();
        }
    }//GEN-LAST:event_jniLoginKeyPressed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        sairDoSistema();
    }//GEN-LAST:event_jMenu2MouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIMenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIMenuPrincipal().setVisible(true);
            }
        });
    }
    
    public JDesktopPane getDesktop() {
        return jdpAreaDeTrabalho;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JDesktopPane jdpAreaDeTrabalho;
    private javax.swing.JMenu jmCadastro;
    private javax.swing.JMenuBar jmbMenu;
    private javax.swing.JMenuItem jniAutor;
    private javax.swing.JMenuItem jniCliente;
    private javax.swing.JMenuItem jniDevolucao;
    private javax.swing.JMenuItem jniEditora;
    private javax.swing.JMenuItem jniEmprestimo;
    private javax.swing.JMenuItem jniFuncionario;
    private javax.swing.JMenuItem jniGenero;
    private javax.swing.JMenuItem jniLivro;
    private javax.swing.JMenuItem jniLogin;
    private javax.swing.JMenuItem jniReserva;
    // End of variables declaration//GEN-END:variables

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {
        

    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) {
        if(e.getInternalFrame() instanceof GUICliente){
            flagGUICliente = false;
        }else if(e.getInternalFrame() instanceof GUIFuncionario){
            flagGUIFuncionario = false;
        }else if(e.getInternalFrame() instanceof GUILivro){
            flagGUILivro = false;
        }else if(e.getInternalFrame() instanceof GUIAutor){
            flagGUIAutor = false;
        }else if(e.getInternalFrame() instanceof GUIGenero){
            flagGUIGenero = false;
        }else if(e.getInternalFrame() instanceof GUIEditora){
            flagGUIEditora = false;
        }else if(e.getInternalFrame() instanceof GUIEmprestimo){
            flagGUIEmprestimo = false;
        }else if(e.getInternalFrame() instanceof GUIReserva){
            flagGUIReserva = false;
        }else if(e.getInternalFrame() instanceof GUICadManuLogin){
            flagGUICadManuLogin = false;
        }else if(e.getInternalFrame() instanceof GUICadManuLogin){
            flagMeusDados = false;
        }
    }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) {
    }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) {
    }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) {
        
    }
}
